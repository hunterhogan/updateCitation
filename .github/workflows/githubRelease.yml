name: Make GitHub Release

on:
  workflow_run:
    workflows: ["Python Tests"]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get versionPackage from Python Tests workflow
        id: use-project-info
        run: |
          versionPackage=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/jobs | jq -r '.jobs[] | select(.name == "get-project-info") | .outputs.versionPackage')
          echo "versionPackage=$versionPackage" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Check for existing release
        id: checkRelease
        run: |
          git fetch --tags
          if git rev-parse "v${{ steps.use-project-info.outputs.versionPackage }}" >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Create GitHub Release
        if: steps.checkRelease.outputs.exists == 'false'
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda #v2.2.1
        with:
          tag_name: ${{ steps.use-project-info.outputs.versionPackage }}
          name: ${{ steps.use-project-info.outputs.versionPackage }}
          draft: false
          prerelease: false
